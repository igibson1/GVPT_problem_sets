---
title: "Problem Set 5"
subtitle: "Due date: 23 October"
format: 
  html:
    self-contained: true
toc: true
editor: visual
execute: 
  echo: true
---

Please upload your completed assignment to the ELMs course site (under the assignments menu). Remember to include an annotated script file for all work with R and show your math for all other problems (if applicable, or necessary). Please also upload your completed assignment to the Github repository that you have shared with us. *We should be able to run your script with no errors.*

**Total points: 25**

```{r}
library(scales)
```

## Question 1

*Total points: 6*

::: {.callout-tip}
4/6
:::

Use the data in the table below to answer the following questions.

```{r}
#| echo: false

tibble::tibble(
  `Age group` = c("18-24", "25-30", "31 and up", "TOTAL"),
  `Non-voters` = c(70, 40, 220, 330),
  Voters = c(50, 50, 570, 670),
  Total = `Non-voters` + Voters
) |> 
  knitr::kable(caption = "Voting by Age in 2000")
```

### Part A

*Points: 2*

::: {.callout-tip}
2/2
:::

What is the probability of being 25-30 or a non-voter?

-   P(A or B)=P(A)+P(B)-P(A and B)

-   P(A)= 25-30 = 90/1000

-   P(B) = non voter = 330/1000

-   P(A and B)= 40/1000

-   (90/1000)+(330/1000)-(40/1000)

```{r}
(90/1000)+(330/1000)-(40/1000)
```

ANSWER: The probability of being 25-30 or a non-voter is 38% or .38

### Part B

*Points: 4*

::: {.callout-tip}
2/4
:::

Assuming a normal distribution, report the 95% confidence intervals for the percentage of 18-to-24-year-olds who did not vote, and then the percentage of 25-to-30-year-olds who did not vote.

```{r}
#Creating a confidence interval 18-24

confidence_interval <- function(p, n) {
  se <- sqrt(p*(1-p)/n) 
  lower_range <- p - 1.96*se
  upper_range <- p + 1.96*se
  return(c(lower_range, upper_range))
}
p_18to24 <- 70/120
CI_18to24 <- confidence_interval(p_18to24, 120)

#confidence interval 25-30
p_25to30 <- 40/90
CI_25to30 <- confidence_interval(p_25to30, 90)

#showing results 
list(CI_18to24 = CI_18to24, CI_25to30 = CI_25to30)
```

ANSWER:

```         
$CI_18to24
[1] 0.4951233 0.6715434

$CI_25to30
[1] 0.3417830 0.5471059
```

::: {.callout-tip} 
The probability that an individual is 18-to-24 and a non-voter is not conditional. Therefore, you look at the proportion of the whole population who meet those criteria.

$$
\hat{p} = Pr(18\ to\ 24 \& NV) = \frac{70}{1000} = 0.07 
$$

And: 

$$
n = 1000
$$

Therefore: 

$$
SE(\hat{p}) = \sqrt{\frac{0.07 * 0.93}{1000}} = 0.008068457
$$

The 95% confidence interval can be found:

$$
\hat{p} \pm 1.96*SE(\hat{p})
$$

Therefore, the 95% confidence interval for the percentage of 18-to-24-year-olds who did not vote is `r percent(0.07 - 1.96 * 0.008068457, accuracy = 0.01)` to `r percent(0.07 + 1.96 * 0.008068457, accuracy = 0.01)`.

Using the same method, the 95% confidence intervals for the percentage of 25-to-30-year-olds who did not vote is `r percent(0.04 - 1.96*0.006196773, accuracy = 0.01)` to `r percent(0.04 + 1.96*0.006196773, accuracy = 0.01)`.
:::

## Question 2

*Total points:* *7*

::: {.callout-tip}
7/7
:::

Assume that the standard deviation for the population distribution of a state in which you want to conduct a poll is 200.

### Part A

*Points: 3*

::: {.callout-tip}
3/3
:::

Calculate the spread of the sampling distribution for each of the following sample sizes: 1, 4, 25, 100, 250, 1000, 5,000, and 10,000.

```{r}
s_d_2 <- 200 
sample_distribution <- c(1, 4, 25, 100, 250, 1000, 5000, 10000)
se <- s_d_2 / sqrt(sample_distribution)

data.frame(Sample_distribution = sample_distribution, Standard_error = se)
```

### Part B

*Points: 1*

::: {.callout-tip}
1/1
:::

Describe specifically how the variability of the sampling distribution changes as the sample size varies. Considering the expense of running a poll, which sample size do you think is most optimal if conducting the poll?

-   With a bigger sample, we will have less variability. When we look at 1 and 4 sampling distribution, we see the standard error get cut in half. But when we look at 5,000 vs. 10,000 the standard error doesn't change as much. The variability of the sampling distribution has an inverse relationship with the standard error.

-   I would use the sample size 1000, considering how much it takes to run a poll. I think it would be sufficient enough to use a sample size of 1000 because running a poll has a lot of factors such as funding. While using 5000 would reduce the SE, 1000 does the job, if we compare it to n=100 or 250, the SE reduces significantly when reaching 1000

### Part C

*Points: 3*

::: {.callout-tip}
3/3
:::

Display your results graphically (using R) with the sample size on the x-axis and the standard error (of the sampling distribution) on the y-axis.

```{r}
library(tidyverse)
library(ggplot2)

df_sd_se <- data.frame(Sample_distribution = sample_distribution, Standard_error = se)

ggplot(df_sd_se, aes(x = Sample_distribution, y = Standard_error)) +
  geom_line(color = "black", size = 1) +
  geom_point(color = "lightgreen", size = 3) +
  scale_x_log10(labels = scales::comma_format()) +
     labs(title = "Sample Distribution vs. Sample Size Variability",
       x = "Sample size", 
       y = "Standard Error") +
     theme_minimal()
    

```

## Question 3

*Points: 4*

::: {.callout-tip}
4/4
:::

Suppose you conduct a survey (to generate a sample mean of interest) and find that it has a margin of error of 4.5 with a sample size of 900 using a 95% confidence interval. What would the margin of error be for a 90% confidence interval?

CI_90% = 1.645\*se

```{r}
#margin of error for 95%
z_95 <- 1.96
ME_95 <- 4.5
z_90 <- 1.645

se <- ME_95/z_95

z_90*se
```

Margin of Error for 90 CI = 3.776

## Question 4

*Points: 4*

::: {.callout-tip}
4/4
:::

Assume that, in State A, the mean income in the population is \$20,000 with a standard deviation of \$2,000. If you took an SRS of 900 individuals from that population, what is the probability that you would get a sample mean income of \$20,200 or greater? What would be the probability if the sample size was only 25?

::: callout-note
Assume a normal distribution for both questions.
:::

calculate the z-score for both samples sizes of 900 and 25

Z score 900 = 20,000-20,000/(2000/sqrt900) = 200/66.67 = 2.999, 3

Z score 25 = 20,000-20,000/(2000/sqrt25) = 200/400 = .5

```{r}
200/66.67

200/400
```

```{r}
prob_25 <- 1-pnorm(.5)
prob_900 <- 1-pnorm(3)

prob_25
prob_900
```

ANSWER: prob 25 = .308 or 31% prob 900 = .00134 or .13%

## Question 5

*Points: 4*

::: {.callou-tip}
3/4
:::

Assume that a coin is fair. If I flip a coin 500 times, what is a 95% confidence interval for the range of the count of heads that I will get? What if I flip the coin 5,000 times? What about 50,000 times?

```{r}
#500
n_500 <- 500
prob500 <- 0.5  
#z-score for a 95% CI
z_500 <- qnorm(0.975)  

CI_95_500 <- c(prob500 - z_500 * sqrt(prob500 * (1 - prob500) / n_500),
            prob500 + z_500 * sqrt(prob500 * (1 - prob500) / n_500))

CI_95_500

#5,000
n_5000 <- 5000
prob5000 <- 0.5 
#z-score for a 95% CI
z_5000 <- qnorm(0.975)  

CI_95_5000 <- c(prob5000 - z_5000 * sqrt(prob5000 * (1 - prob5000) / n_5000),
            prob5000 + z_5000 * sqrt(prob5000 * (1 - prob5000) / n_5000))

CI_95_5000

#50,000
n_50000 <- 50000
prob50000 <- 0.5 
#z-score for a 95% CI
z_50000 <- qnorm(0.975)  

CI_95_50000 <- c(prob50000 - z_50000 * sqrt(prob50000 * (1 - prob50000) / n_50000),
            prob50000 + z_50000 * sqrt(prob50000 * (1 - prob50000) / n_50000))

CI_95_50000
```

ANSWER: 95% Confidence interval for the range of the count of heads that I will get for

-   500 = .456 to .544

-   5,000 = .486 to .514

-   50,000 = .496 to .504

::: {.callout-tip}
Almost! The question asks for the confidence interval for the range of the *count* of heads. So, your center point should the number of heads you flipped in these trials. If you have a 50% chance of getting heads when you flip a fair coin, your expected number of heads should be 250, 2,500, and 25,000 heads from each trial. You calculate your confidence around this result. 

```{r}
p_head <- 0.5

tibble(
  flips = c(500, 5000, 50000),
  expected_n_heads = flips*p_head,
  sd = sqrt(flips*p_head*(1-p_head)),
  lower_ci = expected_n_heads - qnorm(0.975)*sd,
  upper_ci = expected_n_heads + qnorm(0.975)*sd
) |> 
  knitr::kable()
```
:::
